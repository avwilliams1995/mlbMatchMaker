{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nfunction useFetchBatters() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  const fetchTopBatters = async (clearData = false, getTomorrow = false) => {\n    setIsLoading(true);\n    try {\n      console.log(\"in fetch data\");\n      const response = await fetch(`http://localhost:3001/api/scraper?clear=${clearData}&tomorrow=${getTomorrow}`);\n      if (!response.ok) {}\n      const data = await response.json();\n      setData(data);\n    } catch (err) {\n      console.log(\"Error fetching top batters:\" + err);\n      setError(\"Error fetching top batters\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTopBatters();\n  }, []);\n  return {\n    data,\n    error,\n    isLoading,\n    refetch: fetchTopBatters\n  };\n}\n_s(useFetchBatters, \"AxZr47JVOJi/LgN2hHfSVFIhSbU=\");\nexport default useFetchBatters;","map":{"version":3,"names":["useState","useEffect","useFetchBatters","_s","isLoading","setIsLoading","error","setError","data","setData","fetchTopBatters","clearData","getTomorrow","console","log","response","fetch","ok","json","err","refetch"],"sources":["/Users/drewwilliams/mlbMatchMaker/client/src/hooks/useFetchBatters.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useFetchBatters() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<null | string>(null);\n  const [data, setData] = useState([]);\n\n  const fetchTopBatters = async (\n    clearData: boolean = false,\n    getTomorrow: boolean = false\n  ) => {\n    setIsLoading(true);\n    try {\n      console.log(\"in fetch data\");\n      const response = await fetch(\n        `http://localhost:3001/api/scraper?clear=${clearData}&tomorrow=${getTomorrow}`\n      );\n      if (!response.ok){\n        \n      }\n\n      const data = await response.json();\n      setData(data);\n    } catch (err) {\n      console.log(\"Error fetching top batters:\" + err);\n      setError(\"Error fetching top batters\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTopBatters();\n  }, []);\n  return { data, error, isLoading, refetch: fetchTopBatters };\n}\n\nexport default useFetchBatters;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,eAAe,GAAG,MAAAA,CACtBC,SAAkB,GAAG,KAAK,EAC1BC,WAAoB,GAAG,KAAK,KACzB;IACHP,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACFQ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2CAA2CL,SAAS,aAAaC,WAAW,EAC9E,CAAC;MACD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAC,CAEjB;MAEA,MAAMT,IAAI,GAAG,MAAMO,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZN,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAGK,GAAG,CAAC;MAChDZ,QAAQ,CAAC,4BAA4B,CAAC;IACxC,CAAC,SAAS;MACRF,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EACDJ,SAAS,CAAC,MAAM;IACdS,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAEF,IAAI;IAAEF,KAAK;IAAEF,SAAS;IAAEgB,OAAO,EAAEV;EAAgB,CAAC;AAC7D;AAACP,EAAA,CAhCQD,eAAe;AAkCxB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}