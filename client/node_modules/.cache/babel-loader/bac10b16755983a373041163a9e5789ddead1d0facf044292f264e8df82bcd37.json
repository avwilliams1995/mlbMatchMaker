{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nfunction useFetchBatters(clearData) {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchBatters = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(\"http://localhost:3001/api/scraper?clear=\" + clearData);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        setError(\"Error fetching top batters\");\n        console.error(\"Error fetching top batters\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchBatters();\n  });\n  return {\n    data,\n    isLoading,\n    error\n  };\n}\n_s(useFetchBatters, \"AxZr47JVOJi/LgN2hHfSVFIhSbU=\");\nexport default useFetchBatters;","map":{"version":3,"names":["useState","useEffect","useFetchBatters","clearData","_s","isLoading","setIsLoading","error","setError","data","setData","fetchBatters","response","fetch","ok","Error","status","json","console"],"sources":["/Users/drewwilliams/mlbMatchMaker/client/src/hooks/useFetchBatters.ts"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n\nfunction useFetchBatters(clearData:boolean) {\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState<null | string>(null)\n  const [data, setData] = useState([])\n\n  useEffect(()=> {\n    const fetchBatters = async () => {\n      setIsLoading(true)\n      try {\n        const response = await fetch(\n          \"http://localhost:3001/api/scraper?clear=\" + clearData\n        );\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n  \n        setData(data);\n      } catch (error) {\n        setError(\"Error fetching top batters\")\n        console.error(\"Error fetching top batters\", error);\n      } finally {\n        setIsLoading(false)\n      }\n    };\n    fetchBatters()\n  })\n  return {data, isLoading, error}\n}\n\nexport default useFetchBatters"],"mappings":";AAAA,SAAeA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAEhD,SAASC,eAAeA,CAACC,SAAiB,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAK;IACb,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BL,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0CAA0C,GAAGV,SAC/C,CAAC;QACD,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMP,IAAI,GAAG,MAAMG,QAAQ,CAACK,IAAI,CAAC,CAAC;QAElCP,OAAO,CAACD,IAAI,CAAC;MACf,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdC,QAAQ,CAAC,4BAA4B,CAAC;QACtCU,OAAO,CAACX,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACRD,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDK,YAAY,CAAC,CAAC;EAChB,CAAC,CAAC;EACF,OAAO;IAACF,IAAI;IAAEJ,SAAS;IAAEE;EAAK,CAAC;AACjC;AAACH,EAAA,CA7BQF,eAAe;AA+BxB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}