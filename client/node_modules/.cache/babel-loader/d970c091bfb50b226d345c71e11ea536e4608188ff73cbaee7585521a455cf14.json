{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nfunction useFetchBatters() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  const fetchBatters = async (clearData = false) => {\n    console.log('in fetch batters');\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:3001/api/scraper?clear=\" + clearData);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(data);\n      setData(data);\n    } catch (error) {\n      setError(\"Error fetching top batters\");\n      console.error(\"Error fetching top batters\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchBatters();\n  }, []);\n  return {\n    data,\n    isLoading,\n    error,\n    refetch: fetchBatters\n  };\n}\n_s(useFetchBatters, \"AxZr47JVOJi/LgN2hHfSVFIhSbU=\");\nexport default useFetchBatters;","map":{"version":3,"names":["useState","useEffect","useFetchBatters","_s","isLoading","setIsLoading","error","setError","data","setData","fetchBatters","clearData","console","log","response","fetch","ok","Error","status","json","refetch"],"sources":["/Users/drewwilliams/mlbMatchMaker/client/src/hooks/useFetchBatters.ts"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction useFetchBatters() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<null | string>(null);\n  const [data, setData] = useState([]);\n\n  const fetchBatters = async (clearData:boolean = false) => {\n    console.log('in fetch batters')\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n        \"http://localhost:3001/api/scraper?clear=\" + clearData\n      );\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log(data)\n\n      setData(data);\n    } catch (error) {\n      setError(\"Error fetching top batters\");\n      console.error(\"Error fetching top batters\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchBatters();\n  }, []);\n  return { data, isLoading, error, refetch: fetchBatters };\n}\n\nexport default useFetchBatters;\n"],"mappings":";AAAA,SAAgBA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,YAAY,GAAG,MAAAA,CAAOC,SAAiB,GAAG,KAAK,KAAK;IACxDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BR,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0CAA0C,GAAGJ,SAC/C,CAAC;MACD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMV,IAAI,GAAG,MAAMM,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;MAEjBC,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,QAAQ,CAAC,4BAA4B,CAAC;MACtCK,OAAO,CAACN,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,SAAS;MACRD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEDJ,SAAS,CAAC,MAAM;IACdS,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAEF,IAAI;IAAEJ,SAAS;IAAEE,KAAK;IAAEc,OAAO,EAAEV;EAAa,CAAC;AAC1D;AAACP,EAAA,CAhCQD,eAAe;AAkCxB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}