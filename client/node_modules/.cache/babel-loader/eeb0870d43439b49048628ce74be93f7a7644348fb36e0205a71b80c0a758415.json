{"ast":null,"code":"var _jsxFileName = \"/Users/drewwilliams/mlbMatchMaker/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport BatterTable from \"./components/BatterTable\";\nimport useFetchBatters from \"./hooks/useFetchBatters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [clearData, setClearData] = useState(false);\n  const [getTomorrow, setGetTomorrow] = useState(false);\n  const [isTomorrowData, setIsTomorrowData] = useState(false);\n  const {\n    data,\n    error,\n    isLoading,\n    refetch\n  } = useFetchBatters();\n  console.log(data, isLoading, error);\n  const handleRefresh = () => {\n    if (getTomorrow && !isTomorrowData) {\n      refetch(true, true);\n      setIsTomorrowData(true);\n    } else {\n      if (!clearData) return;\n      refetch(clearData, false);\n      setIsTomorrowData(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top Batters to Bet On Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Clear Previous Data\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: clearData,\n          onChange: e => setClearData(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Get Tomorrow's Data?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: getTomorrow,\n          onChange: e => setGetTomorrow(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefresh,\n        children: isLoading ? \"Scraping new data...\" : \"Refresh Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Leaderboard-table\",\n        children: /*#__PURE__*/_jsxDEV(BatterTable, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eEfVNZpwPQIlrVjHvXB5W1lBNs0=\", false, function () {\n  return [useFetchBatters];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BatterTable","useFetchBatters","jsxDEV","_jsxDEV","App","_s","clearData","setClearData","getTomorrow","setGetTomorrow","isTomorrowData","setIsTomorrowData","data","error","isLoading","refetch","console","log","handleRefresh","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/drewwilliams/mlbMatchMaker/client/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport BatterTable from \"./components/BatterTable\";\nimport useFetchBatters from \"./hooks/useFetchBatters\";\n\nfunction App() {\n  const [clearData, setClearData] = useState(false);\n  const [getTomorrow, setGetTomorrow] = useState(false)\n  const [isTomorrowData, setIsTomorrowData] = useState(false)\n  const {data, error, isLoading, refetch} = useFetchBatters()\n\n\n  console.log(data, isLoading, error)\n  const handleRefresh = () => {\n    if (getTomorrow && !isTomorrowData){\n      refetch(true, true)\n      setIsTomorrowData(true)\n    } else {\n      if (!clearData) return;\n      refetch(clearData, false)\n      setIsTomorrowData(false)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1>Top Batters to Bet On Today</h1>\n        <label>\n          Clear Previous Data\n          <input\n            type=\"checkbox\"\n            checked={clearData}\n            onChange={(e) => setClearData(e.target.checked)}\n          />\n        </label>\n        <label>\n          Get Tomorrow's Data?\n          <input\n            type=\"checkbox\"\n            checked={getTomorrow}\n            onChange={(e) => setGetTomorrow(e.target.checked)}\n          />\n        </label>\n\n        <button onClick={handleRefresh}>\n          {isLoading ? \"Scraping new data...\" : \"Refresh Data\"}\n        </button>\n        <div className=\"Leaderboard-table\">\n          <BatterTable data={data}/>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}