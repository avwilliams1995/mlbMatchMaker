{"map":"{\"version\":3,\"sources\":[\"/Users/drewwilliams/mlbMatchMaker/client/src/App.tsx\",\"/Users/drewwilliams/mlbMatchMaker/client/src/index.tsx\"],\"names\":[\"App\",\"teams\",\"setTeams\",\"useState\",\"loading\",\"setLoading\",\"fetchLeaderboard\",\"async\",\"response\",\"fetch\",\"data\",\"json\",\"console\",\"log\",\"sortedData\",\"sort\",\"a\",\"b\",\"score\",\"Number\",\"error\",\"useEffect\",\"React\",\"createElement\",\"className\",\"onClick\",\"disabled\",\"map\",\"team\",\"index\",\"key\",\"name\",\"golfer\",\"ReactDOM\",\"render\",\"StrictMode\",\"document\",\"getElementById\"],\"mappings\":\"uNAuEeA,IAAAA,EA9Df,WACE,MAAOC,EAAOC,GAAYC,OAAAA,EAAAA,SAAAA,CAAiB,KACpCC,EAASC,GAAcF,OAAAA,EAAAA,SAAAA,EAAkB,GAE1CG,EAAmBC,UACvBF,GAAW,GACX,IACE,MAAMG,QAAiBC,MAAM,qCACvBC,QAAaF,EAASG,OAC5BC,QAAQC,IAAI,OAAQH,GAEpB,MAAMI,EAAaJ,EAAKK,KAAK,CAACC,EAASC,KACV,MAAZD,EAAEE,MAAgB,EAAIC,OAAOH,EAAEE,SACnB,MAAZD,EAAEC,MAAgB,EAAIC,OAAOF,EAAEC,SAIhDhB,EAASY,GACTT,GAAW,GACX,MAAOe,GACPR,QAAQQ,MAAM,8BAA+BA,GAC9C,QACCf,GAAW,KAQf,OAJAgB,OAAAA,EAAAA,UAAAA,CAAU,KACRf,KACC,IAGDgB,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbF,EAAAA,EAAAC,cAAA,SAAA,CAAQC,UAAU,cAChBF,EAAAA,EAAAC,cAAA,KAAA,KAAI,kCACJD,EAAAA,EAAAC,cAAA,SAAA,CAAQE,QAASnB,EAAkBoB,SAAUtB,GAC1CA,EAAU,aAAe,uBAE5BkB,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,+BACbF,EAAAA,EAAAC,cAAA,QAAA,CAAOC,UAAU,qBACfF,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,KAAA,KACED,EAAAA,EAAAC,cAAA,KAAA,KAAI,aACJD,EAAAA,EAAAC,cAAA,KAAA,KAAI,UACJD,EAAAA,EAAAC,cAAA,KAAA,KAAI,WAGRD,EAAAA,EAAAC,cAAA,QAAA,KACGtB,EAAM0B,IAAI,CAACC,EAAMC,IAChBP,EAAAA,EAAAC,cAAA,KAAA,CAAIO,IAAKD,GACPP,EAAAA,EAAAC,cAAA,KAAA,KAAKK,EAAKG,MACVT,EAAAA,EAAAC,cAAA,KAAA,KAAKK,EAAKI,QACVV,EAAAA,EAAAC,cAAA,KAAA,KAAKK,EAAKV,eCvD5Be,EAAAA,EAASC,OACPZ,EAAAA,EAAAC,cAACD,EAAAA,EAAMa,WAAU,KACfb,EAAAA,EAAAC,cAACvB,EAAG,OAENoC,SAASC,eAAe\",\"sourcesContent\":[\"import React, { useState, useEffect } from 'react';\\nimport './App.css';\\n\\ninterface Team {\\n  name: string;\\n  golfer: string;\\n  score: number | string;\\n}\\n\\nfunction App() {\\n  const [teams, setTeams] = useState<Team[]>([]);\\n  const [loading, setLoading] = useState<boolean>(false);\\n\\n  const fetchLeaderboard = async () => {\\n    setLoading(true);\\n    try {\\n      const response = await fetch(\\\"http://localhost:3000/api/scraper\\\");\\n      const data = await response.json();\\n      console.log('data', data)\\n\\n      const sortedData = data.sort((a: Team, b: Team) => {\\n        const scoreA = a.score === \\\"E\\\" ? 0 : Number(a.score);\\n        const scoreB = b.score === \\\"E\\\" ? 0 : Number(b.score);\\n        return scoreA - scoreB;\\n      });\\n      \\n      setTeams(sortedData);\\n      setLoading(false);\\n    } catch (error) {\\n      console.error('Error fetching leaderboard:', error);\\n    } finally {\\n      setLoading(false);\\n    }\\n  };\\n\\n  useEffect(() => {\\n    fetchLeaderboard();\\n  }, []);\\n\\n  return (\\n    <div className=\\\"App\\\">\\n      <header className=\\\"App-header\\\">\\n        <h1>Travel League Golf Leaderboard</h1>\\n        <button onClick={fetchLeaderboard} disabled={loading}>\\n          {loading ? \\\"Loading...\\\" : \\\"Refresh Leaderboard\\\"}\\n        </button>\\n        <div className=\\\"Leaderboard-table-container\\\">\\n          <table className=\\\"Leaderboard-table\\\">\\n            <thead>\\n              <tr>\\n                <th>Team Name</th>\\n                <th>Golfer</th>\\n                <th>Score</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              {teams.map((team, index) => (\\n                <tr key={index}>\\n                  <td>{team.name}</td>\\n                  <td>{team.golfer}</td>\\n                  <td>{team.score}</td>\\n                </tr>\\n              ))}\\n            </tbody>\\n          </table>\\n        </div>\\n      </header>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport \\\"./index.css\\\";\\nimport App from \\\"./App\\\";\\n\\nReactDOM.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>,\\n  document.getElementById(\\\"root\\\")\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\n\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,function(e,a,t){e.exports=t(10)},,,,,function(e,a,t){},function(e,a,t){},function(e,a,t){\"use strict\";t.r(a);var r=t(0),n=t.n(r),l=t(2),c=t.n(l);t(8),t(9);var o=function(){const[e,a]=Object(r.useState)([]),[t,l]=Object(r.useState)(!1),c=async()=>{l(!0);try{const t=await fetch(\"http://localhost:3000/api/scraper\"),r=await t.json();console.log(\"data\",r);const n=r.sort((e,a)=>(\"E\"===e.score?0:Number(e.score))-(\"E\"===a.score?0:Number(a.score)));a(n),l(!1)}catch(e){console.error(\"Error fetching leaderboard:\",e)}finally{l(!1)}};return Object(r.useEffect)(()=>{c()},[]),n.a.createElement(\"div\",{className:\"App\"},n.a.createElement(\"header\",{className:\"App-header\"},n.a.createElement(\"h1\",null,\"Travel League Golf Leaderboard\"),n.a.createElement(\"button\",{onClick:c,disabled:t},t?\"Loading...\":\"Refresh Leaderboard\"),n.a.createElement(\"div\",{className:\"Leaderboard-table-container\"},n.a.createElement(\"table\",{className:\"Leaderboard-table\"},n.a.createElement(\"thead\",null,n.a.createElement(\"tr\",null,n.a.createElement(\"th\",null,\"Team Name\"),n.a.createElement(\"th\",null,\"Golfer\"),n.a.createElement(\"th\",null,\"Score\"))),n.a.createElement(\"tbody\",null,e.map((e,a)=>n.a.createElement(\"tr\",{key:a},n.a.createElement(\"td\",null,e.name),n.a.createElement(\"td\",null,e.golfer),n.a.createElement(\"td\",null,e.score))))))))};c.a.render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(o,null)),document.getElementById(\"root\"))}],[[3,1,2]]]);","extractedComments":[]}